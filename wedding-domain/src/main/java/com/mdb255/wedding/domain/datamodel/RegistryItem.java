package com.mdb255.wedding.domain.datamodel;

// Generated by Hibernate Tools

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * RegistryItem generated by hbm2java
 */
@Entity
@Table(name = "registry_item", catalog = "weddingdb")
public class RegistryItem implements java.io.Serializable {

	private Integer registryItemId;
	private String category;
	private boolean isPurchasable;
	private int initialStock;
	private String priceRange;
	private String description;
	private String imageUrl;
	private Set<Purchase> purchases = new HashSet<Purchase>(0);

	public RegistryItem() {
	}

	public RegistryItem(String category, boolean isPurchasable,
			int initialStock, String description) {
		this.category = category;
		this.isPurchasable = isPurchasable;
		this.initialStock = initialStock;
		this.description = description;
	}

	public RegistryItem(String category, boolean isPurchasable,
			int initialStock, String priceRange, String description,
			String imageUrl, Set<Purchase> purchases) {
		this.category = category;
		this.isPurchasable = isPurchasable;
		this.initialStock = initialStock;
		this.priceRange = priceRange;
		this.description = description;
		this.imageUrl = imageUrl;
		this.purchases = purchases;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "registry_item_id", unique = true, nullable = false)
	public Integer getRegistryItemId() {
		return this.registryItemId;
	}

	public void setRegistryItemId(Integer registryItemId) {
		this.registryItemId = registryItemId;
	}

	@Column(name = "category", nullable = false, length = 30)
	public String getCategory() {
		return this.category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	@Column(name = "is_purchasable", nullable = false)
	public boolean isIsPurchasable() {
		return this.isPurchasable;
	}

	public void setIsPurchasable(boolean isPurchasable) {
		this.isPurchasable = isPurchasable;
	}

	@Column(name = "initial_stock", nullable = false)
	public int getInitialStock() {
		return this.initialStock;
	}

	public void setInitialStock(int initialStock) {
		this.initialStock = initialStock;
	}

	@Column(name = "price_range", length = 45)
	public String getPriceRange() {
		return this.priceRange;
	}

	public void setPriceRange(String priceRange) {
		this.priceRange = priceRange;
	}

	@Column(name = "description", nullable = false, length = 60)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "image_url", length = 100)
	public String getImageUrl() {
		return this.imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "registryItem")
	public Set<Purchase> getPurchases() {
		return this.purchases;
	}

	public void setPurchases(Set<Purchase> purchases) {
		this.purchases = purchases;
	}

}
